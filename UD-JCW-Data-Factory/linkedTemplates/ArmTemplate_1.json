{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "UD-JCW-Data-Factory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/df_emp_master')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_adlgen2_empmaster",
								"type": "DatasetReference"
							},
							"name": "SourceFileEmpMaster"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sqldatabase_payroll_emp_md",
								"type": "DatasetReference"
							},
							"name": "SinkSqlEmpMaster"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SourceFileEmpMaster",
						"SourceFileEmpMaster sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SinkSqlEmpMaster"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_title_master')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_adlgen2_titlemaster",
								"type": "DatasetReference"
							},
							"name": "SourceFileTitleMaster"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sqldatabase_payroll_title_md",
								"type": "DatasetReference"
							},
							"name": "SinkSqlTitleMaster"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          TitleCode as string,",
						"          TitleDescription as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SourceFileTitleMaster",
						"SourceFileTitleMaster sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          TitleCode as string,",
						"          TitleDescription as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SinkSqlTitleMaster"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_agency_master')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_adlgen2_agencymaster",
								"type": "DatasetReference"
							},
							"name": "SourceFileAngencyMaster"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sqldatabase_payroll_agency_md",
								"type": "DatasetReference"
							},
							"name": "SinkSqlAgencyMaster"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          AgencyID as string,",
						"          AgencyName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SourceFileAngencyMaster",
						"SourceFileAngencyMaster sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          AgencyID as string,",
						"          AgencyName as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SinkSqlAgencyMaster"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dataflow_summary')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_sqldatabase_payroll_data_2020",
								"type": "DatasetReference"
							},
							"name": "Sql2020Payroll"
						},
						{
							"dataset": {
								"referenceName": "ds_sqldatabase_payroll_data_2021",
								"type": "DatasetReference"
							},
							"name": "Sql2021Payroll"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_synapse_analytics_nyc_payroll_summary",
								"type": "DatasetReference"
							},
							"name": "SinkSqlPayrollSummaryTable"
						},
						{
							"dataset": {
								"referenceName": "ds_staging",
								"type": "DatasetReference"
							},
							"name": "SinkADLGen2Staging"
						}
					],
					"transformations": [
						{
							"name": "Sql2020U2021"
						},
						{
							"name": "FiscalYearFilter"
						},
						{
							"name": "TotalPaid"
						},
						{
							"name": "AggregateAgencyNameFiscalYear"
						}
					],
					"scriptLines": [
						"parameters{",
						"     dataflow_param_fiscalyear as integer (2020)",
						"}",
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Sql2020Payroll",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Sql2021Payroll",
						"Sql2020Payroll, Sql2021Payroll union(byName: true)~> Sql2020U2021",
						"Sql2020U2021 filter(FiscalYear>=$dataflow_param_fiscalyear) ~> FiscalYearFilter",
						"FiscalYearFilter derive(TotalPaid = RegularGrossPaid + TotalOTPaid + TotalOtherPay) ~> TotalPaid",
						"TotalPaid aggregate(groupBy(AgencyName,",
						"          FiscalYear),",
						"     TotalPaid = sum(TotalPaid)) ~> AggregateAgencyNameFiscalYear",
						"AggregateAgencyNameFiscalYear sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          AgencyName as string,",
						"          TotalPaid as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SinkSqlPayrollSummaryTable",
						"AggregateAgencyNameFiscalYear sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1) ~> SinkADLGen2Staging"
					]
				}
			},
			"dependsOn": []
		}
	]
}